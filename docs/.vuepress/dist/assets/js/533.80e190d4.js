(window.webpackJsonp=window.webpackJsonp||[]).push([[533],{905:function(t,a,s){"use strict";s.r(a);var e=s(28),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"react-应用中的高频对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-应用中的高频对象"}},[t._v("#")]),t._v(" React 应用中的高频对象")]),t._v(" "),s("p",[t._v("在 React 应用中，有很多特定的对象和数据结构，了解这些内部的设计，可以更容易理解 react 运行原理。本章主要列举从 react 启动到渲染过程出现频率较高，影响范围较大的对象，它们贯穿整个 react 运行时。")]),t._v(" "),s("p",[t._v("其他过程的重要对象：")]),t._v(" "),s("ul",[s("li",[t._v("如"),s("code",[t._v("事件对象")]),t._v("(位于"),s("code",[t._v("react-doc/events")]),t._v("保障 react 应用能够响应 ui 交互 )，在事件机制章节中详细解读。")]),t._v(" "),s("li",[t._v("如"),s("code",[t._v("ReactContext，ReactProvider，ReactConsumer")]),t._v("对象，在 context 机制章节中详细解读。")])]),t._v(" "),s("h2",{attrs:{id:"react-包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-包"}},[t._v("#")]),t._v(" react 包")]),t._v(" "),s("p",[t._v("在"),s("a",{attrs:{href:"./%E5%AE%8F%E8%A7%82%E5%8C%85%E7%BB%93%E6%9E%84"}},[t._v("React 应用的宏观包结构")]),t._v("中介绍过，此包定义 react 组件("),s("code",[t._v("ReactElement")]),t._v(")的必要函数，提供一些操作"),s("code",[t._v("ReactElement")]),t._v("对象的api。")]),t._v(" "),s("p",[t._v("所以这个包的核心需要理解"),s("code",[t._v("ReactElement")]),t._v("对象，假设有如下入口函数：")]),t._v(" "),s("div",{staticClass:"language-jsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 入口函数")]),t._v("\nReactDOM"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("App")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'root'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("可以简单的认为，包括"),s("code",[t._v("<App />")]),t._v("及其所有子节点都是"),s("code",[t._v("ReactElement")]),t._v("对象(在 render 之后才会生成子节点，后文详细解读)，每个"),s("code",[t._v("ReactElement")]),t._v("对象的区别在于 type 不同。")]),t._v(" "),s("h3",{attrs:{id:"reactelement-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reactelement-对象"}},[t._v("#")]),t._v(" ReactElement 对象")]),t._v(" "),s("blockquote",[s("p",[t._v("其 type 定义在"),s("code",[t._v("shared")]),t._v("包中。")])]),t._v(" "),s("p",[t._v("所有采用"),s("code",[t._v("jsx")]),t._v("语法书写的节点，都会被编译器转换，最终会以"),s("code",[t._v("React.createElement(...)")]),t._v("的方式，创建出来一个与之对应的"),s("code",[t._v("ReactElement")]),t._v("对象。")]),t._v(" "),s("p",[s("code",[t._v("ReactElement")]),t._v("对象的数据结构如下：")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReactElement")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用于辨别ReactElement对象")]),t._v("\n  $$"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 内部属性")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 表明其种类")]),t._v("\n  key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  ref"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  props"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  \n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ReactFiber 记录创建本对象的Fiber节点，还未与Fiber树关联之前，该属性为null")]),t._v("\n  _owner"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  \n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// __DEV__ dev环境下的一些额外信息，如文件路径，文件名，行列信息等")]),t._v("\n  _store"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" vaslidated"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  _self"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" React$Element"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  _shadowChildren"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  _source"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Source"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("需要特别注意 2 个属性：")]),t._v(" "),s("ol",[s("li",[s("p",[s("code",[t._v("key")]),t._v("属性在"),s("code",[t._v("reconciler")]),t._v("阶段会用到，目前只需知道所有的"),s("code",[t._v("ReactElement")]),t._v("对象都有 key 属性(且其默认值是null，这点十分重要，在diff算法中会使用到)")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("type")]),t._v("属性决定了节点的种类：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("它的值可以是字符串(代表"),s("code",[t._v("div,span")]),t._v("等 dom 节点)，函数(代表"),s("code",[t._v("function，class")]),t._v("等节点)，或者 react 内部定义的节点类型("),s("code",[t._v("portal, context,fragment")]),t._v("等)")])]),t._v(" "),s("li",[s("p",[t._v("在"),s("code",[t._v("reconciler")]),t._v("阶段，会根据 type 执行不同的逻辑(在 fiber 构建阶段详细解读)")]),t._v(" "),s("ul",[s("li",[t._v("如 type 是一个字符串类型，则直接使用")]),t._v(" "),s("li",[t._v("如 type 是一个"),s("code",[t._v("ReactComponent")]),t._v("类型，则会调用其 render 方法获取子节点")]),t._v(" "),s("li",[t._v("如 type 是一个"),s("code",[t._v("function")]),t._v("类型，则会调用该方法获取子节点")]),t._v(" "),s("li",[t._v("...")])])])])])]),t._v(" "),s("p",[t._v("在"),s("code",[t._v("v17.0.2")]),t._v("中，定义了20种内部节点类型，根据运行时环境不同，分别采用 16 进制的字面量和"),s("code",[t._v("Symbol")]),t._v("进行表示。")]),t._v(" "),s("h3",{attrs:{id:"reactcomponent对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reactcomponent对象"}},[t._v("#")]),t._v(" ReactComponent对象")]),t._v(" "),s("p",[t._v("对于"),s("code",[t._v("ReactElement")]),t._v("来讲，"),s("code",[t._v("ReactComponent")]),t._v("仅仅是诸多"),s("code",[t._v("type")]),t._v("类型中的一种。")]),t._v(" "),s("p",[t._v("对于开发者来讲，"),s("code",[t._v("ReactComponent")]),t._v("使用非常高频(在状态组件章节中详细解读)，在本节只是先证明它是一种特殊的"),s("code",[t._v("ReactElement")]),t._v("。")]),t._v(" "),s("p",[t._v("这里用一个简单的示例，通过查看编译后的代码来说明")]),t._v(" "),s("div",{staticClass:"language-jsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("App")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("className")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n      \t")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("header")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("header")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("header")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n        ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Content")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n        ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("footer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("footer")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("footer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n      ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Content")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React.Fragment")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n      \t")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n        ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n        ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n      ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React.Fragment")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" App"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("编译之后的代码(此处只编译了 jsx 语法，并没有将 class 语法编译成 es5 中的 function)，可以更直观的看出调用逻辑。")]),t._v(" "),s("p",[s("code",[t._v("createElement")]),t._v("函数的第一个参数将作为创建"),s("code",[t._v("ReactElement")]),t._v("的"),s("code",[t._v("type")]),t._v("，可以看到"),s("code",[t._v("Content")]),t._v("这个变量被编译器命名为"),s("code",[t._v("App_Content")]),t._v("，并作为第一个参数(引用传递)，传入了"),s("code",[t._v("createElement")]),t._v(" 。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("App_App")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("react_default"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*#__PURE__*/")]),t._v(" react_default"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'div'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        className"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'app'")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*#__PURE__*/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      react_default"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'header'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'header'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*#__PURE__*/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      \n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此处直接将Content传入，是一个指针传递")]),t._v("\n      react_default"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("App_Content"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*#__PURE__*/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      react_default"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'footer'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'footer'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("App_Content")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("react_default"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*#__PURE__*/")]),t._v(" react_default"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    \treact_default"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Fragment"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*#__PURE__*/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      react_default"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'p'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*#__PURE__*/")]),t._v("\n      \n      react_default"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'p'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*#__PURE__*/")]),t._v("\n      \n      react_default"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'p'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("上述示例演示了"),s("code",[t._v("ReactComponent")]),t._v("是诸多"),s("code",[t._v("ReactElement")]),t._v("种类中的一种情况，但是由于"),s("code",[t._v("ReactComponent")]),t._v("是class类型，自有它的特殊性。")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("ReactComponent")]),t._v("是 class 类型，继承父类"),s("code",[t._v("Component")]),t._v("，拥有特殊的方法("),s("code",[t._v("setState")]),t._v("，"),s("code",[t._v("forceUpdate")]),t._v(")和特殊的属性("),s("code",[t._v("context")]),t._v(" ，"),s("code",[t._v("updater")]),t._v("等)。")]),t._v(" "),s("li",[t._v("在"),s("code",[t._v("reconciler")]),t._v("阶段，会依据"),s("code",[t._v("ReactElement")]),t._v("对象的特征，生成对应的 fiber 节点，当识别到"),s("code",[t._v("ReactElement")]),t._v("对象是 class 类型的时候，会触发"),s("code",[t._v("ReactComponent")]),t._v("对象的生命周期，并调用其"),s("code",[t._v("render")]),t._v("方法，生成"),s("code",[t._v("ReactElement")]),t._v("子节点。")])]),t._v(" "),s("h3",{attrs:{id:"其他reactelement"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他reactelement"}},[t._v("#")]),t._v(" 其他"),s("code",[t._v("ReactElement")])]),t._v(" "),s("p",[t._v("上文介绍了第一种特殊的"),s("code",[t._v("ReactElement")]),t._v("("),s("code",[t._v("class")]),t._v("类型的组件)，除此之外"),s("code",[t._v("function")]),t._v("类型的组件也需要深入了解，因为"),s("code",[t._v("Hook")]),t._v("只能在"),s("code",[t._v("function")]),t._v("类型的组件中使用。")]),t._v(" "),s("p",[t._v("如果在"),s("code",[t._v("function")]),t._v("类型的组件中没有使用"),s("code",[t._v("Hook")]),t._v("(如："),s("code",[t._v("useState")]),t._v("，"),s("code",[t._v("useEffect")]),t._v("等)，在"),s("code",[t._v("reconciler")]),t._v("阶段所有有关"),s("code",[t._v("Hook")]),t._v("的处理都会略过，最后调用该"),s("code",[t._v("function")]),t._v("拿到子节点"),s("code",[t._v("ReactElement")]),t._v("。")]),t._v(" "),s("p",[t._v("如果使用了"),s("code",[t._v("Hook")]),t._v("，逻辑就相对复杂，涉及到"),s("code",[t._v("Hook")]),t._v("创建和状态保存(有关Hook的原理部分，在 Hook 原理章节中详细解读)，此处只需要了解"),s("code",[t._v("function")]),t._v("类型的组件和"),s("code",[t._v("class")]),t._v("类型的组件一样，是诸多"),s("code",[t._v("ReactElement")]),t._v("形式中的一种。")]),t._v(" "),s("h3",{attrs:{id:"reactelement内存结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reactelement内存结构"}},[t._v("#")]),t._v(" "),s("code",[t._v("ReactElement")]),t._v("内存结构")]),t._v(" "),s("p",[t._v("通过前文对"),s("code",[t._v("ReactElement")]),t._v("的介绍，可以比较容易的画出"),s("code",[t._v("<App />")]),t._v("这个"),s("code",[t._v("ReactElement")]),t._v("对象在内存中的结构("),s("code",[t._v("reconciler")]),t._v("阶段完成之后才会形成完整的结构)。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/yuhongjing/img-folder/master/img/ReactElement.png",alt:""}})]),t._v(" "),s("p",[t._v("注意：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("class")]),t._v("和"),s("code",[t._v("function")]),t._v("类型的组件，其子节点在 render 之后("),s("code",[t._v("reconciler")]),t._v("阶段)才生成的，此处只是单独表示"),s("code",[t._v("ReactElement")]),t._v("的数据结构。")]),t._v(" "),s("li",[t._v("父级对象和子级对象之间时通过"),s("code",[t._v("props.children")]),t._v("属性进行关联的(与fiber树不同)。")]),t._v(" "),s("li",[s("code",[t._v("ReactElement")]),t._v(" 虽然不能算是一个严格的树，也不能算是一个严格的链表，它的生成过程是自顶向下的，是所有组件节点的总和。")]),t._v(" "),s("li",[s("code",[t._v("ReactElement")]),t._v("树(暂且用树来表述)和"),s("code",[t._v("fiber")]),t._v("树是以"),s("code",[t._v("props.children")]),t._v("为单位"),s("code",[t._v("先后交替")]),t._v("生成的(在 fiber 树构建章节详细解读)，当"),s("code",[t._v("ReactElement")]),t._v("树构造完毕，fiber树也随后构造完毕。")]),t._v(" "),s("li",[s("code",[t._v("reconciler")]),t._v("阶段会根据"),s("code",[t._v("ReactElement")]),t._v("的类型生成对应的"),s("code",[t._v("fiber")]),t._v("节点(不是一一对应，比如"),s("code",[t._v("Fragment")]),t._v("类型的组件在生成"),s("code",[t._v("fiber")]),t._v("节点的时候会略过)。")])]),t._v(" "),s("h2",{attrs:{id:"react-reconciler包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-reconciler包"}},[t._v("#")]),t._v(" "),s("code",[t._v("react-reconciler")]),t._v("包")]),t._v(" "),s("p",[t._v("在"),s("a",{attrs:{href:"./%E5%AE%8F%E8%A7%82%E5%8C%85%E7%BB%93%E6%9E%84"}},[t._v("宏观结构")]),t._v("中介绍过，"),s("code",[t._v("react-reconciler")]),t._v("包是"),s("code",[t._v("react")]),t._v("应用的中枢，连接渲染器("),s("code",[t._v("react-dom")]),t._v(")和调度中心("),s("code",[t._v("scheduler")]),t._v(")，同时自身也负责fiber树的构造。")]),t._v(" "),s("p",[t._v("对于此包的深入分析，放在"),s("code",[t._v("fiber 树构建")]),t._v("，"),s("code",[t._v("reconciler 工作空间")]),t._v("等章节中。")]),t._v(" "),s("p",[t._v("此处先要知道"),s("code",[t._v("fiber")]),t._v("是核心，react体系的渲染和更新都要以 fiber 作为数据模型，如果不能理解 fiber，也无法深入理解 react。")]),t._v(" "),s("p",[t._v("本章先预览一下此包中与"),s("code",[t._v("fiber")]),t._v("对象关联度较高的对象。")]),t._v(" "),s("h3",{attrs:{id:"fiber-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fiber-对象"}},[t._v("#")]),t._v(" Fiber 对象")]),t._v(" "),s("p",[t._v("先看数据结构，其 type 类型的定义在"),s("code",[t._v("ReactInternalTypes.js")]),t._v("中：")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一个Fiber对象代表一个即将渲染或者已经渲染的组件(ReactElement)，一个组件可能对应两个fiber(current和WorkInProgress)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  单个属性的解释在后文")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Fiber")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  tag"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" WorkTag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  elementType"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  stateNode"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  child"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  sibling"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  index"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  ref"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("handle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" mixed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" _stringRef"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" RefObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tpendingProps"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从ReactElement对象传入的props，用于和fiber.memoizedProps比较可以得出属性是否变动")]),t._v("\n\tmemoizedProps"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 上一次生成子节点时用到的属性，生成子节点之后保持在内存中")]),t._v("\n  updateQueue"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" mixed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 存储state更新的队列，当前节点的state改动之后，都会创建一个update对象添加到这个队列中")]),t._v("\n\tmemoziedState"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用于输出的state，最终渲染所使用的state")]),t._v("\n\tdependencies"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Dependencies "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 该fiber节点所依赖的(contexts，events)等")]),t._v("\n\tmode"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" TypeOfMode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 二进制位Bitfield，继承至父节点，影响本fiber节点及其子树中所有节点，与react应用的运行模式有关(ConcurrentMode，BlockingMode，NoMode等选项)")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Effect 副作用相关")]),t._v("\n\tflags"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Flags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 标志位")]),t._v("\n  subtreeFlags"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Flags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 替代16.x版本中的 firstEffect，nextEffect 当设置了 enableNewReconciler=true才会启用")]),t._v("\n\tdeletions"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Array")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Fiber"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 存储将要被删除的子节点，当设置了 enableNewReconciler=true才会启用")]),t._v("\n\n\tnextEffect"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 单向链表，指向下一个有副作用的fiber节点")]),t._v("\n\tfirstEffect"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指向副作用链表中的第一个fiber节点")]),t._v("\n\tlastEffect"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指向副作用链表中的最后一个fiber节点")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 优先级相关")]),t._v("\n\tlanes"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lanes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 本fiber节点的优先级")]),t._v("\n \tchildLanes"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lanes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 子节点的优先级")]),t._v("\n \talternate"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指向内存中的另一个fiber，每个被更新过fiber节点在内存中都是成对出现(current和workInProgress)")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 性能统计相关(开启enableProfilerTimer后才会统计)")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// react-dev-tool会根据这些时间统计来评估性能")]),t._v("\n\tactualDuration"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 本次更新过程，本节点以及子树所消耗的总时间")]),t._v("\n  actualStartTime"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 标记本fiber节点开始构建的时间")]),t._v("\n\tselfBaseDuration"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用于最近一次生成本fiber节点所消耗的时间")]),t._v("\n  treeBaseDuration"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" numnber"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 生成子树所消耗的时间的总和")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("属性解释：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("fiber.tag")]),t._v("：表示 fiber 类型，根据"),s("code",[t._v("ReactElement")]),t._v("组件的 type 进行生产，在 react 内部共定义了 25种tag。")]),t._v(" "),s("li",[s("code",[t._v("fiber.key")]),t._v("：和"),s("code",[t._v("ReactElement")]),t._v("组件的key一致。")]),t._v(" "),s("li",[s("code",[t._v("fiber.elementType")]),t._v("：一般来讲和"),s("code",[t._v("ReactElement")]),t._v("组件的 type 一致。")]),t._v(" "),s("li",[s("code",[t._v("fiber.type")]),t._v("：一般来讲和"),s("code",[t._v("fiber.elementType")]),t._v("一致，一些特殊情形下，比如在开发环境下为了兼容热更新("),s("code",[t._v("HotReloading")]),t._v(")，会对"),s("code",[t._v("function, class, ForwardRef")]),t._v("类型对"),s("code",[t._v("ReactElement")]),t._v("做一定对处理，这种情况会区别于"),s("code",[t._v("fiber.elementType")]),t._v("。")]),t._v(" "),s("li",[s("code",[t._v("fiber.stateNode")]),t._v("：与"),s("code",[t._v("fiber")]),t._v("关联的局部状态节点(比如:"),s("code",[t._v("HostComponent")]),t._v("类型指向与"),s("code",[t._v("fiber")]),t._v("节点对应的 dom 节点；根节点"),s("code",[t._v("fiber.stateNode")]),t._v("指向的是"),s("code",[t._v("FiberRoot")]),t._v("；class类型节点其"),s("code",[t._v("stateNode")]),t._v("指向的是 class 实例)。")]),t._v(" "),s("li",[s("code",[t._v("fiber.return")]),t._v("：指向父节点。")]),t._v(" "),s("li",[s("code",[t._v("fiber.child")]),t._v("：指向第一个子节点。")]),t._v(" "),s("li",[s("code",[t._v("fiber.sibling")]),t._v("：指向下一个兄弟节点。")]),t._v(" "),s("li",[s("code",[t._v("fiber.index")]),t._v("：fiber 在兄弟节点中的索引，如果是单节点默认为 0。")]),t._v(" "),s("li",[s("code",[t._v("fiber.ref")]),t._v("：指向在"),s("code",[t._v("ReactElement")]),t._v("组件上设置的 ref("),s("code",[t._v("string")]),t._v("类型的"),s("code",[t._v("ref")]),t._v("除外，这种类型的"),s("code",[t._v("ref")]),t._v("已经不推荐使用，"),s("code",[t._v("reconciler")]),t._v("阶段会将"),s("code",[t._v("string")]),t._v("类型的"),s("code",[t._v("ref")]),t._v("转换成一个"),s("code",[t._v("function")]),t._v("类型)。")]),t._v(" "),s("li",[s("code",[t._v("fiber.pendingProps")]),t._v("：输入属性，从"),s("code",[t._v("ReactElement")]),t._v("对象传入的props，用于和"),s("code",[t._v("fiber.memoizedProps")]),t._v("比较可以得出属性是否变动。")]),t._v(" "),s("li",[s("code",[t._v("fiber.memoizedProps")]),t._v("：上一次生成子节点时用到的属性，生成子节点之后保持在内存中，向下生成子节点之前叫做"),s("code",[t._v("pendingProps")]),t._v("，生成子节点之后会把"),s("code",[t._v("pendingProps")]),t._v("赋值给"),s("code",[t._v("memoizedProps")]),t._v("用于下一次比较。"),s("code",[t._v("pendingProps")]),t._v("和"),s("code",[t._v("memoizedProps")]),t._v("比较可以得出属性是否变动。")]),t._v(" "),s("li",[s("code",[t._v("fiber.updateQueue")]),t._v("：存储"),s("code",[t._v("update更新对象")]),t._v("的队列，每一次发起更新，都需要在该队列上创建一个"),s("code",[t._v("update对象")]),t._v("。")]),t._v(" "),s("li",[s("code",[t._v("fiber.memoizedState")]),t._v("：上一次生成子节点之后保持在内存中的局部状态。")]),t._v(" "),s("li",[s("code",[t._v("fiber.dependencies")]),t._v("：该 fiber 节点所依赖的(contexts，events)等，在"),s("code",[t._v("context")]),t._v("机制章节详细说明。")]),t._v(" "),s("li",[s("code",[t._v("fiber.mode")]),t._v("：二进制位 Bitfield，继承至父节点，影响本 fiber 节点及其子树中所有节点，与react应用的运行模式有关。")]),t._v(" "),s("li",[s("code",[t._v("fiber.flags")]),t._v("：标志位，副作用标记(在16.x版本中叫做"),s("code",[t._v("effectTag")]),t._v(")，在"),s("code",[t._v("ReactFiberFlags.js")]),t._v("中定义了所有的标志位。"),s("code",[t._v("reconciler")]),t._v("阶段会将所有拥有"),s("code",[t._v("flags")]),t._v("标记的节点添加到副作用链表中，等待 commit 阶段的处理。")]),t._v(" "),s("li",[s("code",[t._v("fiber.subtreeFlags")]),t._v("：替代16.x版本中的firstEffect，nextEffect。默认未开启，当设置了enableNewReconciler=true才会启用")]),t._v(" "),s("li",[s("code",[t._v("fiber.deletions")]),t._v("：存储将要被删除的子节点，默认未开启，当设置了enableNewReconciler=true才会启用")]),t._v(" "),s("li",[s("code",[t._v("fiber.nextEffect")]),t._v("：单向链表，指向下一个有副作用的 fiber 节点。")]),t._v(" "),s("li",[s("code",[t._v("fiber.firstEffect")]),t._v("：指向副作用链表中的第一个 fiber 节点。")]),t._v(" "),s("li",[s("code",[t._v("fiber.lastEffect")]),t._v("：指向副作用链表中的最后一个 fiber 节点。")]),t._v(" "),s("li",[s("code",[t._v("fiber.lanes")]),t._v("：本 fiber 节点所属的优先级，创建 fiber 的时候设置。")]),t._v(" "),s("li",[s("code",[t._v("fiber.childLanes")]),t._v("：子节点所属的优先级。")]),t._v(" "),s("li",[s("code",[t._v("fiber.alternate")]),t._v("：指向内存中的另一个 fiber，每个被更新过 fiber 节点在内存中都是成对出现(current 和 workInProgress)")])]),t._v(" "),s("p",[t._v("通过以上 25 个属性的解释，对"),s("code",[t._v("fiber")]),t._v("对象有一个初步的认识。")]),t._v(" "),s("p",[t._v("最后绘制一颗 fiber 树与上下文中的"),s("code",[t._v("ReactElement")]),t._v("树对照起来：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/yuhongjing/img-folder/master/img/ReactElement.png",alt:""}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/yuhongjing/img-folder/master/img/fiber.png",alt:""}})]),t._v(" "),s("p",[t._v("注意：")]),t._v(" "),s("ul",[s("li",[t._v("这里的"),s("code",[t._v("fiber")]),t._v("树只是为了和上文中的"),s("code",[t._v("ReactElement")]),t._v("树对照，所以只用观察红色虚线框内的节点，根节点"),s("code",[t._v("HostRootFiber")]),t._v("在"),s("a",{attrs:{href:"./%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B"}},[t._v("react 应用的启动过程模式中")]),t._v("详细解读。")]),t._v(" "),s("li",[t._v("其中"),s("code",[t._v("<App/>")]),t._v("，"),s("code",[t._v("<Content />")]),t._v("为"),s("code",[t._v("ClassComponent")]),t._v("类型的"),s("code",[t._v("fiber")]),t._v("节点，其余节点都是普通"),s("code",[t._v("HostComponent")]),t._v("类型节点。")]),t._v(" "),s("li",[s("code",[t._v("<Content />")]),t._v("的子节点在"),s("code",[t._v("ReactElement")]),t._v("树中是"),s("code",[t._v("React.Fragment")]),t._v("，但是在"),s("code",[t._v("fiber")]),t._v("树中"),s("code",[t._v("React.Fragment")]),t._v("并没有与之对应的"),s("code",[t._v("fiber")]),t._v("节点("),s("code",[t._v("reconciler")]),t._v("阶段对此类型节点做了单独处理，所以"),s("code",[t._v("ReactElement")]),t._v("节点和"),s("code",[t._v("fiber")]),t._v("节点不是一对一匹配)")])]),t._v(" "),s("h3",{attrs:{id:"update-与-updatequeue-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#update-与-updatequeue-对象"}},[t._v("#")]),t._v(" Update 与 UpdateQueue 对象")]),t._v(" "),s("p",[t._v("在"),s("code",[t._v("fiber")]),t._v("对象中有一个属性"),s("code",[t._v("fiber.updateQueue")]),t._v("，是一个链式队列(即使用链表实现的队列存储结构)，后文会根据场景表述成链表或队列。")]),t._v(" "),s("p",[t._v("首先观察"),s("code",[t._v("Update")]),t._v("对象的数据结构：")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Update"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("State"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  eventTime"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 发起update事件的时间(17.0.2中作为临时字段，即将移除)")]),t._v("\n  lane"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// update所属的优先级")]),t._v("\n  \n  tag"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n  payload"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 载荷，根据场景可以设置成一个回调函数或对象")]),t._v("\n  callback"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" mixed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 回调函数")]),t._v("\n  \n  next"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Update"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("State"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指向链表中的下一个，由于UpdateQueue是一个环形链表，最后update.next指向首个update对象")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ============== UpdateQueue ================")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SharedQueeu"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("State"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  pending"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Update"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("State"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UpdateQueue"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("State"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  baseState"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" State"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  firstBaseUpdate"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Update"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("State"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  lastBaseUpdate"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Update"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("State"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  shared"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" SharedQueue"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("State"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  effects"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Array")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Upadte"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("State"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("属性解释：")]),t._v(" "),s("p",[s("code",[t._v("UpdateQueue")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("baseState")]),t._v("：表示此队列的基础state。")]),t._v(" "),s("li",[s("code",[t._v("firstBaseUpdate")]),t._v("：指向基础队列的队首。")]),t._v(" "),s("li",[s("code",[t._v("lastBaseUpdate")]),t._v("：指向基础队列的队尾。")]),t._v(" "),s("li",[s("code",[t._v("shared")]),t._v("：共享队列。")]),t._v(" "),s("li",[s("code",[t._v("effects")]),t._v("：用于保存有"),s("code",[t._v("callback")]),t._v("回调函数的 update 对象，在"),s("code",[t._v("commit")]),t._v("之后，会依次调用这里的回调函数。")])]),t._v(" "),s("p",[s("code",[t._v("SharedQueue")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("pending")]),t._v("：指向即将输入的"),s("code",[t._v("update")]),t._v("队列，在"),s("code",[t._v("class")]),t._v("组件中调用"),s("code",[t._v("setState()")]),t._v("之后，会将新的 update 对象添加到这个队列中来。")])]),t._v(" "),s("p",[s("code",[t._v("Update")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("eventTime")]),t._v("：发起"),s("code",[t._v("Update")]),t._v("事件的时间(17.0.2中作为临时字段，即将移出)。")]),t._v(" "),s("li",[s("code",[t._v("lane")]),t._v("："),s("code",[t._v("update")]),t._v("所属的优先级。")]),t._v(" "),s("li",[s("code",[t._v("tag")]),t._v("：表示"),s("code",[t._v("update")]),t._v("种类，共 4 种。"),s("code",[t._v("UpdateState，ReplaceState，ForceUpdate，CaptureUpdate")])]),t._v(" "),s("li",[s("code",[t._v("payload")]),t._v("：载荷，"),s("code",[t._v("update")]),t._v("对象真正需要更新的数据，可以设置成一个回调函数或者对象。")]),t._v(" "),s("li",[s("code",[t._v("callback")]),t._v("：回调函数，"),s("code",[t._v("commit")]),t._v("完成之后会调用。")]),t._v(" "),s("li",[s("code",[t._v("next")]),t._v("：指向链表中的下一个，由于"),s("code",[t._v("UpdateQueue")]),t._v("是一个环形链表，最后一个"),s("code",[t._v("update.next")]),t._v("指向第一个"),s("code",[t._v("update")]),t._v("对象。")])]),t._v(" "),s("p",[s("code",[t._v("updateQueue")]),t._v("是"),s("code",[t._v("fiber")]),t._v("对象的一个属性，所以不能脱离"),s("code",[t._v("fiber")]),t._v("存在，它们之间数据结构和引用关系如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/yuhongjing/img-folder/master/img/updatequeue.png",alt:""}})]),t._v(" "),s("p",[t._v("注意：")]),t._v(" "),s("ul",[s("li",[t._v("此处只是展示数据结构和引用关系，对于"),s("code",[t._v("updateQueue")]),t._v("在更新阶段的实际作用和运行逻辑，会在状态组件(class 与 function)章节中详细解读。")])]),t._v(" "),s("h3",{attrs:{id:"hook-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hook-对象"}},[t._v("#")]),t._v(" Hook 对象")]),t._v(" "),s("p",[s("code",[t._v("Hook")]),t._v("用于"),s("code",[t._v("function")]),t._v("组件中，能够保持"),s("code",[t._v("function")]),t._v("组件的状态(与"),s("code",[t._v("class")]),t._v("组件中的"),s("code",[t._v("state")]),t._v("性质上是相同的，都是为了保持组件的状态)。在"),s("code",[t._v("react@16.8")]),t._v("以后，官方开始推荐使用"),s("code",[t._v("Hook")]),t._v("语法，常用的api有"),s("code",[t._v("useState")]),t._v("，"),s("code",[t._v("useEffect")]),t._v("，"),s("code",[t._v("useCallback")]),t._v("等，官方一共定义了14种Hook类型。")]),t._v(" "),s("p",[t._v("这些 api 背后都会创建一个"),s("code",[t._v("Hook")]),t._v("对象，先观察"),s("code",[t._v("Hook")]),t._v("对象的数据结构：")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Hook")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  memoizedState"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  baseState"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  baseQueue"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Update"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  queue"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" UpdateQueue"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  next"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Hook "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Update"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  lane"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  action"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  eagerReducer"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  eagerState"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  next"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Update"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  priority"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ReactPriorityLevel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UpdateQueue"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  pending"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Update"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  dispatch"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" mixed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  lastRenderedReducer"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  lastRenderedState"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("属性解释：")]),t._v(" "),s("p",[s("code",[t._v("Hook")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("memoizedState")]),t._v("：内存状态，用于输出成最终的"),s("code",[t._v("fiber")]),t._v("树。")]),t._v(" "),s("li",[s("code",[t._v("baseState")]),t._v("：基础状态，当"),s("code",[t._v("Hook.queue")]),t._v("更新过后，"),s("code",[t._v("baseState")]),t._v("也会更新。")]),t._v(" "),s("li",[s("code",[t._v("baseQueue")]),t._v("：基础状态队列，在"),s("code",[t._v("reconciler")]),t._v("阶段会辅助状态合并。")]),t._v(" "),s("li",[s("code",[t._v("queue")]),t._v("：指向一个"),s("code",[t._v("Update")]),t._v("队列。")]),t._v(" "),s("li",[s("code",[t._v("next")]),t._v("：指向该"),s("code",[t._v("function")]),t._v("组件的下一个"),s("code",[t._v("Hook")]),t._v("对象，使得多个"),s("code",[t._v("Hook")]),t._v("之间也构成了一个链表。")])]),t._v(" "),s("p",[s("code",[t._v("Hook.queue")]),t._v("和"),s("code",[t._v("Hook.baseQueue")]),t._v("(即"),s("code",[t._v("UpdateQueue")]),t._v("和"),s("code",[t._v("Update")]),t._v(")是为了保证"),s("code",[t._v("Hook")]),t._v("对象能够顺利更新，与上文"),s("code",[t._v("fiber.updateQueue")]),t._v("中的"),s("code",[t._v("UpdateQueue")]),t._v("和"),s("code",[t._v("Update")]),t._v("是不一样的(且它们在不同的文件)，其逻辑会在状态组件(class 与 function)章节中详细解读。")]),t._v(" "),s("p",[s("code",[t._v("Hook")]),t._v("和"),s("code",[t._v("fiber")]),t._v("的关系：")]),t._v(" "),s("p",[t._v("在"),s("code",[t._v("fiber")]),t._v("对象中有一个属性"),s("code",[t._v("fiber.memoizedState")]),t._v("指向"),s("code",[t._v("fiber")]),t._v("节点的内存状态，在"),s("code",[t._v("function")]),t._v("类型的组件中，"),s("code",[t._v("fiber.memoizedState")]),t._v("就指向"),s("code",[t._v("Hook")]),t._v("队列("),s("code",[t._v("Hook")]),t._v("队列保存了"),s("code",[t._v("function")]),t._v("类型的组件类型)。")]),t._v(" "),s("p",[t._v("所以"),s("code",[t._v("Hook")]),t._v("也不能脱离"),s("code",[t._v("fiber")]),t._v("而存在，它们之间的引用关系如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/yuhongjing/img-folder/master/img/fiber-hook.78f3cde0.png",alt:""}})]),t._v(" "),s("p",[t._v("注意：")]),t._v(" "),s("ul",[s("li",[t._v("此处只是展示数据结构和引用关系，对于"),s("code",[t._v("Hook")]),t._v("在运行时的实际作用和逻辑，会在状态组件(class 与 function)章节中解读。")])]),t._v(" "),s("h2",{attrs:{id:"scheduler-包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#scheduler-包"}},[t._v("#")]),t._v(" scheduler 包")]),t._v(" "),s("p",[t._v("如"),s("a",{attrs:{href:"./%E5%AE%8F%E8%A7%82%E5%8C%85%E7%BB%93%E6%9E%84"}},[t._v("宏观结构")]),t._v("中所介绍，"),s("code",[t._v("scheduler")]),t._v("包负责调度，在内部维护一个任务队列(taskQueue)，这个队列是一个最小堆数据(详见"),s("a",{attrs:{href:"./%E5%A0%86%E6%8E%92%E5%BA%8F"}},[t._v("React 算法之堆排序")]),t._v(")，其中存储了task对象。")]),t._v(" "),s("h3",{attrs:{id:"task-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#task-对象"}},[t._v("#")]),t._v(" Task 对象")]),t._v(" "),s("p",[s("code",[t._v("scheduler")]),t._v("包中，没有为 task 对象定义 type，其定义是直接在 js 代码中：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" newTask "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" taskIdCounter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  callback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  priorityLevel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  startTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  expirationTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  sortIndex"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("属性解释：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("id")]),t._v("：唯一标识")]),t._v(" "),s("li",[s("code",[t._v("callback")]),t._v("：task 最核心的字段，指向"),s("code",[t._v("react-reconciler")]),t._v("包所提供的回调函数")]),t._v(" "),s("li",[s("code",[t._v("priorityLevel")]),t._v("：优先级")]),t._v(" "),s("li",[s("code",[t._v("startTime")]),t._v("：一个时间戳，代表 task 的开始时间(创建时间 + 延时时间)")]),t._v(" "),s("li",[s("code",[t._v("expirationTime")]),t._v("：过期时间")]),t._v(" "),s("li",[s("code",[t._v("sortIndex")]),t._v("：控制 task 在队列中的次序，值越小的越靠前")])]),t._v(" "),s("p",[t._v("注意"),s("code",[t._v("task")]),t._v("中没有"),s("code",[t._v("next")]),t._v("属性，它不是一个链表，其顺序是通过堆排序来实现的(小顶堆数组，始终保证数组中的第一个"),s("code",[t._v("task")]),t._v("对象优先级最高)。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/yuhongjing/img-folder/master/img/taskqueue.40da8e6e.png",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("本章主要浏览了 react 运行链路中出现的高频对象，并对它们的数据结构做出了单独解释。提前了解这些对象的数据结构，更有利于之后对 react 源码的深入分析，在后续对整个运行核心的解读中会多次引用到这些对象，并对其在运行时的具体作用深入解读。")])])}),[],!1,null,null,null);a.default=n.exports}}]);