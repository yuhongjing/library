(window.webpackJsonp=window.webpackJsonp||[]).push([[248],{618:function(t,s,a){"use strict";a.r(s);var e=a(28),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"字符匹配攻略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符匹配攻略"}},[t._v("#")]),t._v(" 字符匹配攻略")]),t._v(" "),a("p",[t._v("正则表达式是匹配模式，要么匹配字符，要么匹配位置。")]),t._v(" "),a("h2",{attrs:{id:"两种模糊匹配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#两种模糊匹配"}},[t._v("#")]),t._v(" 两种模糊匹配")]),t._v(" "),a("p",[t._v("如果正则只有精准匹配是没有多大意义的，比如"),a("code",[t._v("/hello/")]),t._v('，只能匹配字符串中的"hello"这个子串。')]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("hello")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => true")]),t._v("\n")])])]),a("p",[t._v("正则表达式之所以强大，是因为其能实现模糊匹配。")]),t._v(" "),a("p",[t._v('而模糊匹配，有两个方向上的"模糊"：'),a("code",[t._v("横向模糊")]),t._v("和"),a("code",[t._v("纵向模糊")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"横向模糊匹配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#横向模糊匹配"}},[t._v("#")]),t._v(" 横向模糊匹配")]),t._v(" "),a("blockquote",[a("p",[t._v("横向模糊指的是")]),t._v(" "),a("blockquote",[a("p",[t._v("一个正则可匹配的字符串的长度不是固定的，可以是多种情况的。")])])]),t._v(" "),a("p",[t._v("其实现的方式是使用"),a("strong",[t._v("量词")]),t._v("。譬如"),a("code",[t._v("{m,n}")]),t._v("，表示连续出现最少m次，最多n次。")]),t._v(" "),a("p",[t._v("比如正则"),a("code",[t._v("/ab{2,5}c/")]),t._v('表示匹配这样一个字符串：第一个字符是"a"，接下来是2到5个字符"b"，最后是字符"c"。')]),t._v(" "),a("p",[t._v("测试如下：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("ab{2,5}c")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc abbc abbbc abbbbc abbbbbc abbbbbbc"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => ["abbc", "abbbc", "abbbbc", "abbbbbc"]')]),t._v("\n")])])]),a("h3",{attrs:{id:"纵向模糊匹配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#纵向模糊匹配"}},[t._v("#")]),t._v(" 纵向模糊匹配")]),t._v(" "),a("blockquote",[a("p",[t._v("纵向模糊指的是")]),t._v(" "),a("blockquote",[a("p",[t._v("一个正则匹配的字符串，具体到某一位字符时，它可以不是某个确定的字符，可以有多种可能。")])])]),t._v(" "),a("p",[t._v("其实现的方式是使用"),a("strong",[t._v("字符组")]),t._v("。譬如"),a("code",[t._v("[abc]")]),t._v('，表示该字符是可以字符"a"、"b"、"c"中的任何一个。')]),t._v(" "),a("p",[t._v("比如"),a("code",[t._v("/a[123]b/")]),t._v('可以匹配如下三种字符串："a1b"、"a2b"、"a3b"。')]),t._v(" "),a("p",[t._v("测试如下：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("a[123]b")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a0b a1b a2b a3b a4b"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => ["a1b", "a2b", "a3b"]')]),t._v("\n")])])]),a("p",[t._v("只要掌握横向和纵向模糊匹配，就能解决很大部分的正则匹配问题。")]),t._v(" "),a("p",[t._v("下面我们来具体展开"),a("code",[t._v("字符组")]),t._v("和"),a("code",[t._v("量词")]),t._v("的内容。")]),t._v(" "),a("h2",{attrs:{id:"字符组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符组"}},[t._v("#")]),t._v(" 字符组")]),t._v(" "),a("p",[t._v("需要强调的是，虽然叫字符组(字符类)，但只是其中一个字符。")]),t._v(" "),a("p",[t._v("例如"),a("code",[t._v("[abc]")]),t._v('，表示匹配一个字符，它可以是"a"、"b"、"c"之一。')]),t._v(" "),a("h3",{attrs:{id:"范围表示法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#范围表示法"}},[t._v("#")]),t._v(" 范围表示法")]),t._v(" "),a("p",[t._v("如果字符组里的字符特别多的话，怎么办？可以使用范围表达法。")]),t._v(" "),a("p",[t._v("比如"),a("code",[t._v("[123456abcdefGHIJKLM]")]),t._v("，可以写成"),a("code",[t._v("[1-6a-fG-M]")]),t._v("。用连字符"),a("code",[t._v("-")]),t._v("来省略和简写。")]),t._v(" "),a("p",[t._v('因为连字符有特殊用途，那么要匹配"a"、"-"、"z"这三者中的任一字符，该怎么做呢？')]),t._v(" "),a("p",[t._v("不能写成"),a("code",[t._v("[a-z]")]),t._v("，因为其表示小写字符中的任何一个字符。")]),t._v(" "),a("p",[t._v("可以写成如下的方式："),a("code",[t._v("[-az]")]),t._v("或"),a("code",[t._v("[az-]")]),t._v("或"),a("code",[t._v("[a\\-z]")]),t._v("。")]),t._v(" "),a("p",[t._v("即要么放在开头，要么放在结尾，要么转义，总之不会让引擎认为是范围表达法就行了。")]),t._v(" "),a("h3",{attrs:{id:"排除字符组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#排除字符组"}},[t._v("#")]),t._v(" 排除字符组")]),t._v(" "),a("p",[t._v('纵向模糊匹配，还有一种情形就是，某位字符可以是任何东西，但就不能是"a"、"b"、"c"。')]),t._v(" "),a("p",[t._v("此时就是排除字符组(反义字符组)的概念。例如"),a("code",[t._v("[^abc]")]),t._v('，表示是一个除了"a"、"b"、"c"之外的任意一个字符。字符组的第一位放'),a("code",[t._v("^")]),t._v("（脱字符)，表示求反的概念。")]),t._v(" "),a("p",[t._v("当然，也有相应的范围表达法。")]),t._v(" "),a("h3",{attrs:{id:"常见的简写形式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见的简写形式"}},[t._v("#")]),t._v(" 常见的简写形式")]),t._v(" "),a("p",[t._v("有了字符组的概念后，一些常见的符号我们也就理解了。因为它们都是系统自带的简写形式。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("字符组")]),t._v(" "),a("th",[t._v("具体含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("\\d")])]),t._v(" "),a("td",[t._v("表示"),a("code",[t._v("[0-9]")]),t._v("，表示是一位数字。英文digit。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\D")])]),t._v(" "),a("td",[t._v("表示"),a("code",[t._v("[^0-9]")]),t._v("，表示除数字外的任意字符。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\w")])]),t._v(" "),a("td",[t._v("表示"),a("code",[t._v("[0-9a-zA-Z_]")]),t._v("，表示数字、大小写字母和下划线。英文word。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\W")])]),t._v(" "),a("td",[t._v("表示"),a("code",[t._v("[^0-9a-zA-Z_]")]),t._v("，表示非单词字符。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\s")])]),t._v(" "),a("td",[t._v("表示"),a("code",[t._v("[ \\t\\v\\n\\r\\f]")]),t._v("，表示空白符，包括空格、水平制表符、垂直制表符、换行符、回车符、换页符。英文space。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\S")])]),t._v(" "),a("td",[t._v("表示"),a("code",[t._v("[^ \\t\\v\\n\\r\\f]")]),t._v("，表示非空白符。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v(".")])]),t._v(" "),a("td",[t._v("表示"),a("code",[t._v("[^\\n\\r\\u2028\\u2029]")]),t._v("，通配符，表示几乎任意字符。")])])])]),t._v(" "),a("p",[t._v("如果要匹配任意字符怎么办？可以使用"),a("code",[t._v("[\\d\\D]")]),t._v("、"),a("code",[t._v("[\\w\\W]")]),t._v("、"),a("code",[t._v("[\\s\\S]")]),t._v("和"),a("code",[t._v("[^]")]),t._v("中的任何一个。")]),t._v(" "),a("h2",{attrs:{id:"量词"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#量词"}},[t._v("#")]),t._v(" 量词")]),t._v(" "),a("p",[t._v("量词也称重复。掌握"),a("code",[t._v("{m,n}")]),t._v("的准确含义之后，只需要记住一些简写形式即可。")]),t._v(" "),a("h3",{attrs:{id:"简写形式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简写形式"}},[t._v("#")]),t._v(" 简写形式")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("量词")]),t._v(" "),a("th",[t._v("具体含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("{m,}")])]),t._v(" "),a("td",[t._v("表示至少出现m次。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("{m}")])]),t._v(" "),a("td",[t._v("等价于"),a("code",[t._v("{m,m}")]),t._v("，表示出现m次。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("?")])]),t._v(" "),a("td",[t._v("等价于"),a("code",[t._v("{0,1}")]),t._v("，表示出现或者不出现。记忆方式：问号的意思表达，有吗？")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("+")])]),t._v(" "),a("td",[t._v("等价于"),a("code",[t._v("{1,}")]),t._v("，表示至少出现一次。记忆方式：加号意思，先有一个然后才考虑追加。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("*")])]),t._v(" "),a("td",[t._v("等价于"),a("code",[t._v("{0,}")]),t._v("，表示出现任意次。")])])])]),t._v(" "),a("h3",{attrs:{id:"贪婪匹配与惰性匹配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#贪婪匹配与惰性匹配"}},[t._v("#")]),t._v(" 贪婪匹配与惰性匹配")]),t._v(" "),a("p",[t._v("看如下的例子：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("\\d{2,5}")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123 1234 12345 123456"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => ["123", "1234", "12345", "12345"]')]),t._v("\n")])])]),a("p",[t._v("其中正则"),a("code",[t._v("/\\d{2,5}/")]),t._v("，表示数字连续出现2到5次。会匹配2位、3位、4位、5位连续数字。")]),t._v(" "),a("p",[t._v("但是其是贪婪的，它会尽可能多的匹配。你能给我6个，我就要5个。你能给我3个，我就要3个。")]),t._v(" "),a("p",[t._v("反正只要在能力范围内，越多约好。")]),t._v(" "),a("p",[t._v("我们知道有时贪婪不是一件耗时。而惰性匹配，就是尽可能少的匹配：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("\\d{2,5}?")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123 1234 12345 123456"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => ["12", "12", "34", "12", "34", "12", "34", "56"]')]),t._v("\n")])])]),a("p",[t._v("其中"),a("code",[t._v("/\\d{2,5}?/")]),t._v("表示，虽然2到5次都可以，当2个够的时候，就不在往下尝试了。")]),t._v(" "),a("p",[t._v("通过在量词后面加个问号就能实现惰性匹配，因此所有惰性匹配的情形如下：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("惰性量词")]),t._v(" "),a("th",[t._v("贪婪量词")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("{m,n}?")])]),t._v(" "),a("td",[a("code",[t._v("{m,n}")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("{m,}?")])]),t._v(" "),a("td",[a("code",[t._v("{m,}")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("??")])]),t._v(" "),a("td",[a("code",[t._v("?")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("+?")])]),t._v(" "),a("td",[a("code",[t._v("+")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("*?")])]),t._v(" "),a("td",[a("code",[t._v("*")])])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("对惰性匹配的记忆方式是：")]),t._v(" "),a("p",[t._v("在量词后面加个问号，问一问你知足了吗，你很贪婪吗？")])]),t._v(" "),a("h2",{attrs:{id:"多选分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多选分支"}},[t._v("#")]),t._v(" 多选分支")]),t._v(" "),a("p",[t._v("一个模式可以实现横向和纵向模糊匹配。而多选分支可以支持多个子模式任选其一。")]),t._v(" "),a("p",[t._v("具体形式如下："),a("code",[t._v("(p1|p2|p3)")]),t._v("，其中"),a("code",[t._v("p1")]),t._v("、"),a("code",[t._v("p2")]),t._v("和"),a("code",[t._v("p3")]),t._v("是子模式，用"),a("code",[t._v("|")]),t._v("(管道符)分隔，表示其中之一。")]),t._v(" "),a("p",[t._v('例如要匹配字符串"good"和"nice"可以使用'),a("code",[t._v("/good|nice/")]),t._v("。")]),t._v(" "),a("p",[t._v("测试如下：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("good|nice")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"good idea, nice try."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => ["good", "nice"]')]),t._v("\n")])])]),a("p",[t._v("但有个事实我们应该注意，比如我用"),a("code",[t._v("/good|goodbye/")]),t._v('，去匹配"goodbye"字符串，结果是"good"。')]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("good|goodbye")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"goodbye"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => ["good"]')]),t._v("\n")])])]),a("p",[t._v("而把正则改成"),a("code",[t._v("/goodbye|good/")]),t._v("，结果是：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("goodbye|good")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"goodbye"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => ["goodbye"]')]),t._v("\n")])])]),a("p",[t._v("也就是说，分支解构也是"),a("strong",[t._v("惰性")]),t._v("的，即当前面的匹配上了，后面的就不在尝试了。")]),t._v(" "),a("h2",{attrs:{id:"案例分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#案例分析"}},[t._v("#")]),t._v(" 案例分析")]),t._v(" "),a("p",[t._v("匹配字符、无非就是字符组、量词和分支结构的组合使用罢了。")]),t._v(" "),a("p",[t._v("下面找几个例子演练以下（其中，每个正则并不是只有唯一写法）：")]),t._v(" "),a("h3",{attrs:{id:"匹配16进制颜色值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#匹配16进制颜色值"}},[t._v("#")]),t._v(" 匹配16进制颜色值")]),t._v(" "),a("p",[t._v("要求匹配：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("#ffbbad\n#Fc01DF\n#"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FFF")]),t._v("\n#ffE\n")])])]),a("p",[t._v("分析：")]),t._v(" "),a("p",[t._v("表示一个16进制字符，可以用字符组"),a("code",[t._v("[0-9a-fA-F]")]),t._v("。")]),t._v(" "),a("p",[t._v("其中字符可以出现3或6次，需要是用量词和分支结构。")]),t._v(" "),a("p",[t._v("使用分支结构时，需要注意顺序。")]),t._v(" "),a("p",[t._v("正则如下：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("#([0-9a-fA-F]{6}|[0-9a-fA-F]{3})")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#ffbbad #Fc01DF #FFF #ffE"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => ["#ffbbad", "#Fc01DF", "#FFF", "#ffE"]')]),t._v("\n")])])]),a("h3",{attrs:{id:"匹配时间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#匹配时间"}},[t._v("#")]),t._v(" 匹配时间")]),t._v(" "),a("p",[t._v("以24小时制为例")]),t._v(" "),a("p",[t._v("要求匹配：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("59")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("02")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("07")]),t._v("\n")])])]),a("p",[t._v("分析：")]),t._v(" "),a("p",[t._v("当4位数字，第一位数字可以为"),a("code",[t._v("[0-2]")]),t._v("。")]),t._v(" "),a("p",[t._v('当第一位为"2"时，第2位可以为'),a("code",[t._v("[0-3]")]),t._v("，当其他情况时，第二位为"),a("code",[t._v("[0-9]")]),t._v("。")]),t._v(" "),a("p",[t._v("第3位数字位"),a("code",[t._v("[0-5]")]),t._v("，第4位为"),a("code",[t._v("[0-9]")]),t._v("。")]),t._v(" "),a("p",[t._v("正则如下：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^([01][0-9]|[2][0-3]):[05][09]$")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"23:59"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"02:07"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => true")]),t._v("\n")])])]),a("p",[t._v('如果也要求匹配"7:9"，也就是说时分前面的"0"可以省略。')]),t._v(" "),a("p",[t._v("此时正则变成：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^0?[0-9]|1[0-9]|[2][0-3]):(0?[0-9]|[1-5][0-9]$")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"23:59"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"02:07"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"7:9"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => true")]),t._v("\n")])])]),a("p",[t._v("正则中使用了"),a("code",[t._v("^")]),t._v("和"),a("code",[t._v("$")]),t._v("，分别表示字符串开头和结尾。具体详细请参考"),a("RouterLink",{attrs:{to:"/knowledge/web/javascript/正则表达式/JS正则迷你书/位置匹配攻略.html"}},[t._v("第二章")]),t._v("。")],1),t._v(" "),a("h3",{attrs:{id:"匹配日期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#匹配日期"}},[t._v("#")]),t._v(" 匹配日期")]),t._v(" "),a("p",[t._v("比如"),a("code",[t._v("yyyy-mm-dd")]),t._v("格式为例。")]),t._v(" "),a("p",[t._v("要求匹配：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2017")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("06")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n")])])]),a("p",[t._v("分析：")]),t._v(" "),a("p",[t._v("年，四位数字即可，可用"),a("code",[t._v("[0-9]{4}")]),t._v("。")]),t._v(" "),a("p",[t._v('月，共12个月，分两种情况"01"、"02"、"09"和"10"、"11"、"12"，可用'),a("code",[t._v("(0[1-9]|1[0-2])")]),t._v("。")]),t._v(" "),a("p",[t._v("日，最大31天，可用"),a("code",[t._v("(0[1-9]|[12][0-9]|3[01]")]),t._v("。")]),t._v(" "),a("p",[t._v("正则如下：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2017-06-10"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => true")]),t._v("\n")])])]),a("h3",{attrs:{id:"window操作系统文件路径"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#window操作系统文件路径"}},[t._v("#")]),t._v(" window操作系统文件路径")]),t._v(" "),a("p",[t._v("要求匹配：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("F")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\\study\\javascript\\regex\\regular expression"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pdf\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("F")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\\study\\javascript\\regex\\\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("F")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\\study\\javascript\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("F")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\\\n")])])]),a("p",[t._v("分析：")]),t._v(" "),a("p",[t._v("整体模式是：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("盘符"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\\文件夹\\文件夹\\文件夹\\\n")])])]),a("p",[t._v('其中匹配"F:"，需要使用'),a("code",[t._v("[a-zA-Z]:\\\\")]),t._v("，其中盘符不区分大小写，注意"),a("code",[t._v("\\")]),t._v("字符需要转义。")]),t._v(" "),a("p",[t._v("文件名或者文件夹名，不能包含一些特殊字符，此时我们需要排除字符组"),a("code",[t._v('[^\\\\:*<>|"?\\r\\n/]')]),t._v("来表示合法字符。")]),t._v(" "),a("p",[t._v("另外它们的名字不能为空名，至少有一个字符，也就是要使用量词"),a("code",[t._v("+")]),t._v("。因此匹配"),a("code",[t._v("文件夹\\")]),t._v("，可用"),a("code",[t._v('[^\\\\:*<>|"?\\r\\n/]+\\\\')]),t._v("。")]),t._v(" "),a("p",[t._v("另外"),a("code",[t._v("文件夹\\")]),t._v("，可以出现任意次。也就是"),a("code",[t._v('([^\\\\:*<>|"?\\r\\n]+\\\\)*')]),t._v("。其中括号表示其内部正则是一个整体。具体详细请参考"),a("RouterLink",{attrs:{to:"/knowledge/web/javascript/正则表达式/JS正则迷你书/括号的作用.html"}},[t._v("第三章")]),t._v("。")],1),t._v(" "),a("p",[t._v("路径的最后一部分可以是"),a("code",[t._v("文件夹")]),t._v("，没有"),a("code",[t._v("\\")]),t._v("，因此需要添加"),a("code",[t._v('([^\\\\:*<>|"?\\r\\n/]+)?')]),t._v("。")]),t._v(" "),a("p",[t._v("最后拼接成了一个看起来比较复杂的正则：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v('^[a-zA-Z]:\\\\([^\\\\:*<>|"?\\r\\n/]+\\\\)*([^\\\\:*<>|"?\\r\\n/]+)?$')]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"F:\\\\study\\\\javascript\\\\regex\\\\regular expression.pdf"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"F:\\\\study\\\\javascript\\\\regex\\\\"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"F:\\\\study\\\\javascript"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"F:\\\\"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => true")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("在JavaScript中字符串表达字符"),a("code",[t._v("\\")]),t._v("时，也需要转义。")])]),t._v(" "),a("h3",{attrs:{id:"匹配id"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#匹配id"}},[t._v("#")]),t._v(" 匹配id")]),t._v(" "),a("p",[t._v("要求从")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("container"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("提取出"),a("code",[t._v('id="container"')]),t._v("。")]),t._v(" "),a("p",[t._v("最开始可能想到的正则是：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v('id=".*"')]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'<div id="container" class="main"></div>\'')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => id="container" class="main"')]),t._v("\n")])])]),a("p",[t._v("因为"),a("code",[t._v(".")]),t._v("是通配符，本身就匹配双引号的，而量词"),a("code",[t._v("*")]),t._v("又是贪婪的，当遇到container后面的双引号时，是不会停下来，会继续匹配，直到遇到最后一个双引号为止。")]),t._v(" "),a("p",[t._v("解决之道，可以使用惰性匹配：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v('id=".*?"')]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'<div id="container" class="main"></div>\'')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => id="container"')]),t._v("\n")])])]),a("p",[t._v("当然，这样也会有个问题。效率比较低，因为其匹配原理会涉及到『"),a("strong",[t._v("回溯")]),t._v("』这个概念。"),a("RouterLink",{attrs:{to:"/knowledge/web/javascript/正则表达式/JS正则迷你书/回溯法原理.html"}},[t._v("第四章")]),t._v("会详细说明。")],1),t._v(" "),a("p",[t._v("可以优化如下：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v('id="[^"]*"')]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'<div id="container" class="main"></div>\'')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => id="container"')]),t._v("\n")])])]),a("h2",{attrs:{id:"小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("p",[t._v("掌握字符组和量词就能解决大部分常见的情形，也就是说，当你会了这两者，JavaScript正则算是入门了。")])])}),[],!1,null,null,null);s.default=n.exports}}]);