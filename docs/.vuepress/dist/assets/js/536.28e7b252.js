(window.webpackJsonp=window.webpackJsonp||[]).push([[536],{906:function(e,v,_){"use strict";_.r(v);var c=_(28),t=Object(c.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h1",{attrs:{id:"fiber-树构造-基础准备"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#fiber-树构造-基础准备"}},[e._v("#")]),e._v(" fiber 树构造(基础准备)")]),e._v(" "),_("p",[e._v("在 React 运行时中，"),_("code",[e._v("fiber树构造")]),e._v("位于"),_("code",[e._v("react-reconciler")]),e._v("包。")]),e._v(" "),_("p",[e._v("在正式解读"),_("code",[e._v("fiber树构造")]),e._v("之前，再次回顾一下reconciler 运作流程的4个阶段。")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://raw.githubusercontent.com/yuhongjing/img-folder/master/img/reactfiberworkloop.b647e134.png",alt:""}})]),e._v(" "),_("ol",[_("li",[e._v("输入阶段：衔接"),_("code",[e._v("react-dom")]),e._v("包，承接"),_("code",[e._v("fiber更新")]),e._v("请求(可以参考React 应用的启动流程)")]),e._v(" "),_("li",[e._v("注册调度任务：与调度中心("),_("code",[e._v("scheduler")]),e._v("包)交互，注册调度任务"),_("code",[e._v("task")]),e._v("，等待任务回调(可以参考React 调度原理(scheduler))")]),e._v(" "),_("li",[e._v("执行任务回调：在内存中构造出"),_("code",[e._v("fiber树")]),e._v("和"),_("code",[e._v("DOM")]),e._v("对象，也就是"),_("strong",[e._v("fiber 树构造的重点内容")]),e._v("。")]),e._v(" "),_("li",[e._v("输出：与渲染器("),_("code",[e._v("react-dom")]),e._v(")交互，渲染"),_("code",[e._v("DOM")]),e._v("节点。")])]),e._v(" "),_("p",[_("code",[e._v("fiber 树构造")]),e._v("处于上述第 3 个阶段，可以通过不同的视角来理解"),_("code",[e._v("fiber树构造")]),e._v("在"),_("code",[e._v("React")]),e._v("运行时所处的位置：")]),e._v(" "),_("ul",[_("li",[e._v("从"),_("code",[e._v("scheduler")]),e._v("调度中心的角度来看，它是任务队列"),_("code",[e._v("taskQueue")]),e._v("中的一个具体的任务回调("),_("code",[e._v("task.callback")]),e._v(")")]),e._v(" "),_("li",[e._v("从React 工作循环的角度来看，它属于"),_("code",[e._v("fiber树构造循环")])])]),e._v(" "),_("p",[e._v("由于"),_("code",[e._v("fiber 树构造")]),e._v("源码量比较大，本系列根据"),_("code",[e._v("Reac")]),e._v("运行的"),_("code",[e._v("内存状态")]),e._v("，分为 2 种情况来说明：")]),e._v(" "),_("ol",[_("li",[e._v("初次创建：在"),_("code",[e._v("React")]),e._v("应用首次启动时，界面还没有渲染，此时并不会进去对比过程，相当于直接构造一颗全新的树。")]),e._v(" "),_("li",[e._v("对比更新："),_("code",[e._v("React")]),e._v("应用启动后，界面已经渲染，如果再次发生更新，创建"),_("code",[e._v("新fiber")]),e._v("之前需要和"),_("code",[e._v("旧fiber")]),e._v("进行对比。最后构造的fiber树有可能是全新的，也可能是部分更新的。")])]),e._v(" "),_("p",[e._v("无论是"),_("code",[e._v("初次创建")]),e._v("还是"),_("code",[e._v("对比更新")]),e._v("，基础概念都是通用的，本节将介绍这些基础知识，为正式进入"),_("code",[e._v("fiber树构造")]),e._v("做准备。")]),e._v(" "),_("h2",{attrs:{id:"reactelement-fiber-dom三者的关系"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#reactelement-fiber-dom三者的关系"}},[e._v("#")]),e._v(" ReactElement，Fiber，DOM三者的关系")]),e._v(" "),_("p",[e._v("在React 应用中的高频对象一文中，已经介绍了"),_("code",[e._v("ReactElement")]),e._v("和"),_("code",[e._v("Fiber")]),e._v("对象的数据结构，这里我们梳理出"),_("code",[e._v("ReactElement，Fiber，DOM")]),e._v("这 3 种对象的关系。")])])}),[],!1,null,null,null);v.default=t.exports}}]);