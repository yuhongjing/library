(window.webpackJsonp=window.webpackJsonp||[]).push([[184],{497:function(t,r,e){"use strict";e.r(r);var a=e(2),o=Object(a.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"原型与原型链"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#原型与原型链"}},[t._v("#")]),t._v(" 原型与原型链")]),t._v(" "),e("p",[t._v("与大部分面向对象语言不同，JavaScript中并没有引入类"),e("code",[t._v("class")]),t._v("的概念。")]),t._v(" "),e("p",[t._v("但JavaScript仍然大量地使用了对象，为了保证"),e("strong",[t._v("对象之间的联系")]),t._v("，JavaScript引入了原型与原型链的概念。")]),t._v(" "),e("h2",{attrs:{id:"相关知识点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#相关知识点"}},[t._v("#")]),t._v(" 相关知识点")]),t._v(" "),e("h3",{attrs:{id:"对象-proto-属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对象-proto-属性"}},[t._v("#")]),t._v(" 对象__proto__属性")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/proto",target:"_blank",rel:"noopener noreferrer"}},[e("strong",[t._v("proto")]),e("OutboundLink")],1),t._v("不属于ECMAScript的语言规范，它只是大多数现代浏览器厂商自己实现的功能。")]),t._v(" "),e("p",[t._v("由于JS早期无法获取对象的原型，即"),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Inheritance_and_the_prototype_chain",target:"_blank",rel:"noopener noreferrer"}},[t._v("对象内部"),e("OutboundLink")],1),t._v("[[prototype]]属性。所以各大浏览器厂商对Object.prototype通过访问描述符实现"),e("code",[t._v("__proto__")]),t._v("的getter和setter来达到访问调用对象的[[prototype]]属性。")]),t._v(" "),e("blockquote",[e("p",[t._v("[[prototype]]属性属于对象内部属性，无法直接访问，此属性指向对象原型。")])]),t._v(" "),e("h3",{attrs:{id:"函数prototype属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#函数prototype属性"}},[t._v("#")]),t._v(" 函数prototype属性")]),t._v(" "),e("h3",{attrs:{id:"各类方法与属性的统称"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#各类方法与属性的统称"}},[t._v("#")]),t._v(" 各类方法与属性的统称")])])}),[],!1,null,null,null);r.default=o.exports}}]);