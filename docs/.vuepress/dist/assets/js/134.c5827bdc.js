(window.webpackJsonp=window.webpackJsonp||[]).push([[134],{390:function(v,_,a){"use strict";a.r(_);var t=a(2),e=Object(t.a)({},(function(){var v=this,_=v.$createElement,a=v._self._c||_;return a("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[a("h1",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[v._v("#")]),v._v(" 前言")]),v._v(" "),a("p",[v._v("数据结构学习总结整理。"),a("br"),v._v("\n采用"),a("code",[v._v("C语言")]),v._v("和"),a("code",[v._v("js")]),v._v("来描述。")]),v._v(" "),a("h2",{attrs:{id:"数据结构的重要性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据结构的重要性"}},[v._v("#")]),v._v(" 数据结构的重要性")]),v._v(" "),a("p",[a("code",[v._v("程序设计 = 数据结构 + 算法")])]),v._v(" "),a("h2",{attrs:{id:"什么是数据结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是数据结构"}},[v._v("#")]),v._v(" 什么是数据结构")]),v._v(" "),a("p",[v._v("数据结构: "),a("code",[v._v("是相互之间存在一种或多种特定关系的数据元素的集合。")])]),v._v(" "),a("h2",{attrs:{id:"逻辑结构与物理结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#逻辑结构与物理结构"}},[v._v("#")]),v._v(" 逻辑结构与物理结构")]),v._v(" "),a("p",[v._v("根据视点不同，数据结构分为"),a("code",[v._v("逻辑结构")]),v._v("和"),a("code",[v._v("物理结构")]),v._v("。")]),v._v(" "),a("h3",{attrs:{id:"逻辑结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#逻辑结构"}},[v._v("#")]),v._v(" 逻辑结构")]),v._v(" "),a("p",[v._v("逻辑结构: "),a("code",[v._v("指数据对象中数据元素之间的相互关系。")]),v._v("，一般分为四种:")]),v._v(" "),a("ul",[a("li",[a("code",[v._v("集合结构")]),v._v(" 数据元素除了同属一个集合外，没有任何关系")]),v._v(" "),a("li",[a("code",[v._v("线性结构")]),v._v(" 数据元素是一对一的关系")]),v._v(" "),a("li",[a("code",[v._v("树形结构")]),v._v(" 数据元素是一对多的层次关系")]),v._v(" "),a("li",[a("code",[v._v("图形结构")]),v._v(" 数据元素是多对多的关系")])]),v._v(" "),a("h3",{attrs:{id:"物理结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#物理结构"}},[v._v("#")]),v._v(" 物理结构")]),v._v(" "),a("p",[v._v("物理结构: "),a("code",[v._v("指数据的逻辑结构在计算机中的存储形式。")]),v._v("，一般分为两种:")]),v._v(" "),a("ul",[a("li",[a("code",[v._v("顺序存储结构")])])]),v._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("数据元素存放在地址连续的存储单元，其数据间的逻辑关系和物理关系是一致的\n")])])]),a("ul",[a("li",[a("code",[v._v("链式存储结构")])])]),v._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("数据元素存放在任意的存储单元里，这组存储单元可以是连续的，也可以是不连续的\n")])])]),a("h2",{attrs:{id:"数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[v._v("#")]),v._v(" 数据类型")]),v._v(" "),a("p",[v._v("数据类型: "),a("code",[v._v("指一组性质相同的值的集合及定义在此集合上的一些操作的总称。")])]),v._v(" "),a("p",[v._v("在C语言中，按照取值的不同，数据类型可以分为两类:")]),v._v(" "),a("ul",[a("li",[a("code",[v._v("原子类型")]),v._v(" 不可以再分解的基本类型，包括整型、实型、字符型等")]),v._v(" "),a("li",[a("code",[v._v("结构类型")]),v._v(" 由若干类型组合而成，是可以再分解的")])]),v._v(" "),a("h2",{attrs:{id:"抽象数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#抽象数据类型"}},[v._v("#")]),v._v(" 抽象数据类型")]),v._v(" "),a("p",[v._v("抽象是指取出事物具有的普遍性的本质。")]),v._v(" "),a("p",[v._v("抽象数据类型: "),a("code",[v._v("指一个数学模型及定义在该模型上的一组操作。")])]),v._v(" "),a("p",[v._v("抽象的意义在于数据类型的数学抽象特性。")])])}),[],!1,null,null,null);_.default=e.exports}}]);